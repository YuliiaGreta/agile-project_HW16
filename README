Задача 1: Тестирование запросов для пользователей
Описание задачи:
Первая часть задания заключалась в написании тестов для проверки следующих функций:

Получение списка всех пользователей через эндпоинт UserListGenericView.
Регистрация нового пользователя через эндпоинт RegisterUserGenericView.
Проверка валидации данных при регистрации нового пользователя и обработка возможных ошибок валидации.
Реализация:
Для тестирования я использовала Django REST Framework и его инструмент для тестирования APITestCase. Я написала тесты, которые проверяют:

Успешное получение списка всех пользователей и корректность возвращаемого статус-кода (200 OK).
Успешную регистрацию нового пользователя с проверкой, что данные сохраняются в базе данных, и возвращается правильный статус-код (201 Created).
Обработку ошибок валидации при регистрации, в том числе некорректных данных, с соответствующим ответом (400 Bad Request).
Все тесты были успешно написаны и прошли проверку.

Задача 2: Реализация кода для объекта пользователя через BDD + TDD
Описание задачи:
Вторая часть задания предполагала создание нового эндпоинта для получения информации о конкретном пользователе. Для этого я сначала описала тесты на основе BDD (Behavior Driven Development) и TDD (Test Driven Development), а затем реализовала соответствующий эндпоинт.

Реализация:
Я разработала тесты, которые включают:

Успешное получение данных пользователя по ID, с проверкой всех необходимых полей и их типов.
Обработку запроса с несуществующим ID и корректное возвращение ошибки с кодом 404.
После написания тестов я реализовала новый класс UserDetailGenericView, который отвечает за получение информации о пользователе по его ID. Реализация включала в себя настройку сериализатора для преобразования данных в требуемый формат. После этого я снова запустила тесты, и они успешно прошли.


Тестирование:
Для запуска тестов я использовала команду python manage.py test. Результаты выполнения тестов я отправляю "скан" во вложение.
